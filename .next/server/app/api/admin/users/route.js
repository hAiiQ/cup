"use strict";(()=>{var e={};e.id=2628,e.ids=[2628,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},4610:(e,r,n)=>{n.r(r),n.d(r,{originalPathname:()=>v,patchFetch:()=>A,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g});var s={};n.r(s),n.d(s,{GET:()=>p,dynamic:()=>d});var o=n(9303),t=n(8716),a=n(670),i=n(7070),c=n(3538),u=n(5456);async function l(e){console.log("\uD83D\uDD0D Verifying admin access...");let r=e.cookies.get("admin_token")?.value;if(console.log("Admin token found:",r?"YES":"NO"),!r)return console.log("❌ No admin token found"),null;let n=(0,u.WX)(r);if(console.log("Token decoded:",n?"YES":"NO"),console.log("Decoded userId:",n?.userId),!n||!n.userId.startsWith("admin_"))return console.log("❌ Invalid token or not admin token"),null;let s=n.userId.replace("admin_","");console.log("Looking for admin with ID:",s);let o=await c.prisma.admin.findUnique({where:{id:s}});return console.log("Admin found:",o?"YES":"NO"),o}let d="force-dynamic";async function p(e){try{if(!await l(e))return console.log("❌ Admin verification failed - sending 401"),i.NextResponse.json({error:"Nicht autorisiert",needsReauth:!0},{status:401});console.log("✅ Admin verified, fetching users...");try{let e=await c.prisma.user.findMany({orderBy:{createdAt:"desc"}});if(console.log(`📊 Found ${e.length} basic users`),!(e.length>0))return i.NextResponse.json({users:e});try{let e=await c.prisma.user.findMany({include:{team:!0},orderBy:{createdAt:"desc"}});return console.log(`📊 Found ${e.length} users with team relations`),i.NextResponse.json({users:e})}catch(r){return console.log("⚠️ Team relations failed, returning basic users:",r),i.NextResponse.json({users:e})}}catch(e){return console.error("❌ Even basic user query failed:",e),i.NextResponse.json({users:[]})}}catch(e){return console.error("❌ Admin users fetch error details:",e),console.error("❌ Admin users fetch error stack:",e instanceof Error?e.stack:"No stack trace"),console.error("❌ Admin users fetch error message:",e instanceof Error?e.message:String(e)),i.NextResponse.json({error:"Interner Serverfehler: "+(e instanceof Error?e.message:String(e))},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/admin/users/route",pathname:"/api/admin/users",filename:"route",bundlePath:"app/api/admin/users/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\users\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:g,serverHooks:h}=m,v="/api/admin/users/route";function A(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},5456:(e,r,n)=>{n.d(r,{Gv:()=>i,RA:()=>c,WX:()=>u,c_:()=>a});var s=n(8691),o=n(1482),t=n.n(o);let a=async e=>s.ZP.hash(e,12),i=async(e,r)=>s.ZP.compare(e,r),c=e=>{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return t().sign({userId:e},r,{expiresIn:"7d"})},u=e=>{try{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return t().verify(e,r)}catch{return null}}},3538:(e,r,n)=>{n.d(r,{prisma:()=>t});var s=n(3524);let o=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let t=o.prisma??new s.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});t.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../../webpack-runtime.js");r.C(e);var n=e=>r(r.s=e),s=r.X(0,[8948,5972,8691,1482],()=>n(4610));module.exports=s})();