"use strict";(()=>{var e={};e.id=7461,e.ids=[7461,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},9948:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>y,patchFetch:()=>x,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>v});var s={};t.r(s),t.d(s,{POST:()=>p,dynamic:()=>d});var i=t(9303),n=t(8716),a=t(670),o=t(7070),u=t(3538),c=t(5456);async function l(e){let r=e.cookies.get("admin_token")?.value;if(!r)return null;let t=(0,c.WX)(r);if(!t||!t.userId.startsWith("admin_"))return null;let s=t.userId.replace("admin_","");return await u.prisma.admin.findUnique({where:{id:s}})}let d="force-dynamic";async function p(e,{params:r}){try{if(!await l(e))return o.NextResponse.json({error:"Nicht autorisiert"},{status:401});let{id:t}=r,{tier:s}=await e.json();if(!["tier1","tier2","tier3"].includes(s))return o.NextResponse.json({error:"Ung\xfcltiges Tier"},{status:400});let i=await u.prisma.user.update({where:{id:t},data:{tier:s,isVerified:!0}});return o.NextResponse.json({message:"User erfolgreich verifiziert",user:{id:i.id,username:i.username,tier:i.tier,isVerified:i.isVerified}})}catch(e){return console.error("User verification error:",e),o.NextResponse.json({error:"Interner Serverfehler"},{status:500})}}let m=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/users/[id]/verify/route",pathname:"/api/admin/users/[id]/verify",filename:"route",bundlePath:"app/api/admin/users/[id]/verify/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\users\\[id]\\verify\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:v,serverHooks:h}=m,y="/api/admin/users/[id]/verify/route";function x(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:v})}},5456:(e,r,t)=>{t.d(r,{Gv:()=>o,RA:()=>u,WX:()=>c,c_:()=>a});var s=t(8691),i=t(1482),n=t.n(i);let a=async e=>s.ZP.hash(e,12),o=async(e,r)=>s.ZP.compare(e,r),u=e=>{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return n().sign({userId:e},r,{expiresIn:"7d"})},c=e=>{try{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return n().verify(e,r)}catch{return null}}},3538:(e,r,t)=>{t.d(r,{prisma:()=>n});var s=t(3524);let i=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let n=i.prisma??new s.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});n.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[8948,5972,8691,1482],()=>t(9948));module.exports=s})();