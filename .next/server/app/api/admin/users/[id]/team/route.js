"use strict";(()=>{var e={};e.id=9041,e.ids=[9041],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1056:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>c,staticGenerationAsyncStorage:()=>l});var a={};t.r(a),t.d(a,{POST:()=>m});var s=t(9303),i=t(8716),n=t(670),u=t(7070),o=t(728);async function m(e,{params:r}){try{let{id:t}=r,{teamName:a}=await e.json();if(await o._.teamMember.deleteMany({where:{userId:t}}),a&&""!==a){let e=await o._.team.findFirst({where:{name:a},include:{members:!0}});if(!e)return u.NextResponse.json({error:"Team nicht gefunden"},{status:404});if(e.members.length>=6)return u.NextResponse.json({error:"Team ist bereits voll (max. 6 Mitglieder)"},{status:400});await o._.teamMember.create({data:{userId:t,teamId:e.id,role:"member"}})}return u.NextResponse.json({success:!0,message:"Team-Zuweisung erfolgreich aktualisiert"})}catch(e){return console.error("Error updating team assignment:",e),u.NextResponse.json({error:"Fehler beim Aktualisieren der Team-Zuweisung"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/admin/users/[id]/team/route",pathname:"/api/admin/users/[id]/team",filename:"route",bundlePath:"app/api/admin/users/[id]/team/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\users\\[id]\\team\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:c}=d,g="/api/admin/users/[id]/team/route";function h(){return(0,n.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:l})}},728:(e,r,t)=>{t.d(r,{_:()=>s});let a=require("@prisma/client"),s=globalThis.prisma??new a.PrismaClient({})}};var r=require("../../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[8948,5972],()=>t(1056));module.exports=a})();