"use strict";(()=>{var e={};e.id=9041,e.ids=[9041,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1056:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>A,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>p});var a={};t.r(a),t.d(a,{POST:()=>m,dynamic:()=>d});var s=t(9303),n=t(8716),i=t(670),o=t(7070),u=t(3538);let d="force-dynamic";async function m(e,{params:r}){try{let{id:t}=r,{teamName:a}=await e.json();if(console.log(`🔄 Admin assigning user ${t} to team: ${a}`),a&&""!==a){let e=await u.prisma.team.findFirst({where:{name:a}});if(e||a.startsWith("Team ")||(e=await u.prisma.team.findFirst({where:{name:`Team ${a}`}})),!e)return console.log(`❌ Team not found: ${a}`),o.NextResponse.json({error:"Team nicht gefunden"},{status:404});await u.prisma.user.update({where:{id:t},data:{teamId:e.id}}),console.log(`✅ User ${t} assigned to team ${a} (${e.id})`)}else await u.prisma.user.update({where:{id:t},data:{teamId:null}}),console.log(`✅ User ${t} removed from team`);return o.NextResponse.json({success:!0,message:"Team-Zuweisung erfolgreich aktualisiert"})}catch(e){return console.error("Error updating team assignment:",e),o.NextResponse.json({error:"Fehler beim Aktualisieren der Team-Zuweisung"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/users/[id]/team/route",pathname:"/api/admin/users/[id]/team",filename:"route",bundlePath:"app/api/admin/users/[id]/team/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\users\\[id]\\team\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:p,serverHooks:g}=l,h="/api/admin/users/[id]/team/route";function A(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:p})}},3538:(e,r,t)=>{t.d(r,{prisma:()=>n});var a=t(3524);let s=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let n=s.prisma??new a.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});n.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[8948,5972],()=>t(1056));module.exports=a})();