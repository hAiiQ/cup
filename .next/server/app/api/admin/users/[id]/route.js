"use strict";(()=>{var e={};e.id=1317,e.ids=[1317],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},1255:(e,r,n)=>{n.r(r),n.d(r,{originalPathname:()=>x,patchFetch:()=>A,requestAsyncStorage:()=>g,routeModule:()=>f,serverHooks:()=>v,staticGenerationAsyncStorage:()=>h});var s={};n.r(s),n.d(s,{DELETE:()=>p,PATCH:()=>m,dynamic:()=>c});var t=n(9303),o=n(8716),i=n(670),a=n(7070),u=n(728),d=n(5456);async function l(e){console.log("\uD83D\uDD0D Verifying admin access...");let r=e.cookies.get("admin_token")?.value;if(console.log("Admin token found:",r?"YES":"NO"),!r)return console.log("❌ No admin token found"),null;let n=(0,d.WX)(r);if(console.log("Token decoded:",n?"YES":"NO"),console.log("Decoded userId:",n?.userId),!n||!n.userId.startsWith("admin_"))return console.log("❌ Invalid token or not admin token"),null;let s=n.userId.replace("admin_","");console.log("Looking for admin with ID:",s);let t=await u._.admin.findUnique({where:{id:s}});return console.log("Admin found:",t?"YES":"NO"),t}let c="force-dynamic";async function p(e,{params:r}){try{if(!await l(e))return console.log("❌ Admin verification failed - sending 401"),a.NextResponse.json({error:"Nicht autorisiert",needsReauth:!0},{status:401});console.log("✅ Admin verified for user deletion");let{id:n}=r,s=await u._.user.findUnique({where:{id:n},include:{teamMemberships:!0}});if(!s)return a.NextResponse.json({error:"User not found"},{status:404});if(s.teamMemberships.length>0)return a.NextResponse.json({error:"User ist in einem Team und kann nicht gel\xf6scht werden. Entferne den User zuerst aus dem Team."},{status:400});return await u._.user.delete({where:{id:n}}),a.NextResponse.json({success:!0,message:`User ${s.username} wurde erfolgreich gel\xf6scht.`})}catch(e){return console.error("Error deleting user:",e),a.NextResponse.json({error:"Internal server error beim L\xf6schen des Users"},{status:500})}}async function m(e,{params:r}){try{if(!await l(e))return console.log("❌ Admin verification failed - sending 401"),a.NextResponse.json({error:"Nicht autorisiert",needsReauth:!0},{status:401});console.log("✅ Admin verified for user update");let{id:n}=r,{isVerified:s}=await e.json(),t=await u._.user.update({where:{id:n},data:{isVerified:s}});return a.NextResponse.json({success:!0,user:t})}catch(e){return console.error("Error updating user:",e),a.NextResponse.json({error:"Internal server error beim Aktualisieren des Users"},{status:500})}}let f=new t.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/users/[id]/route",pathname:"/api/admin/users/[id]",filename:"route",bundlePath:"app/api/admin/users/[id]/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\users\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:v}=f,x="/api/admin/users/[id]/route";function A(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:h})}},5456:(e,r,n)=>{n.d(r,{Gv:()=>a,RA:()=>u,WX:()=>d,c_:()=>i});var s=n(8691),t=n(1482),o=n.n(t);let i=async e=>s.ZP.hash(e,12),a=async(e,r)=>s.ZP.compare(e,r),u=e=>{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return o().sign({userId:e},r,{expiresIn:"7d"})},d=e=>{try{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return o().verify(e,r)}catch{return null}}},728:(e,r,n)=>{n.d(r,{_:()=>o});let s=require("@prisma/client"),t=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let o=t.prisma??new s.PrismaClient({})}};var r=require("../../../../../webpack-runtime.js");r.C(e);var n=e=>r(r.s=e),s=r.X(0,[8948,5972,1482,8691],()=>n(1255));module.exports=s})();