"use strict";(()=>{var e={};e.id=1317,e.ids=[1317,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},1255:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>x,patchFetch:()=>A,requestAsyncStorage:()=>h,routeModule:()=>g,serverHooks:()=>v,staticGenerationAsyncStorage:()=>f});var n={};s.r(n),s.d(n,{DELETE:()=>p,PATCH:()=>m,dynamic:()=>d});var t=s(9303),o=s(8716),i=s(670),a=s(7070),u=s(3538),l=s(5456);async function c(e){console.log("\uD83D\uDD0D Verifying admin access...");let r=e.cookies.get("admin_token")?.value;if(console.log("Admin token found:",r?"YES":"NO"),!r)return console.log("❌ No admin token found"),null;let s=(0,l.WX)(r);if(console.log("Token decoded:",s?"YES":"NO"),console.log("Decoded userId:",s?.userId),!s||!s.userId.startsWith("admin_"))return console.log("❌ Invalid token or not admin token"),null;let n=s.userId.replace("admin_","");console.log("Looking for admin with ID:",n);let t=await u.prisma.admin.findUnique({where:{id:n}});return console.log("Admin found:",t?"YES":"NO"),t}let d="force-dynamic";async function p(e,{params:r}){try{let{id:e}=r,s=await u.prisma.user.findUnique({where:{id:e}});if(!s)return a.NextResponse.json({error:"User not found"},{status:404});let n=!1;try{let r=await u.prisma.user.findUnique({where:{id:e},include:{teamMemberships:!0}});n=(r?.teamMemberships?.length||0)>0}catch(e){if(console.log("⚠️ TeamMember table issue:",e.message),e.message.includes("does not exist"))console.log("ℹ️ TeamMember table missing - proceeding with deletion"),n=!1;else throw e}if(n)return a.NextResponse.json({error:"User ist in einem Team und kann nicht gel\xf6scht werden. Entferne den User zuerst aus dem Team."},{status:400});return await u.prisma.user.delete({where:{id:e}}),a.NextResponse.json({success:!0,message:`User ${s.username} wurde erfolgreich gel\xf6scht.`})}catch(e){if(console.error("Error deleting user:",e),e?.code==="P2025")return a.NextResponse.json({error:"User nicht gefunden oder bereits gel\xf6scht"},{status:404});if(e?.code==="P2003")return a.NextResponse.json({error:"User kann nicht gel\xf6scht werden - Foreign Key Constraint. Entferne User zuerst aus allen Teams."},{status:400});if(e?.code==="P1001")return a.NextResponse.json({error:"Datenbankverbindung fehlgeschlagen. Bitte versuche es sp\xe4ter erneut."},{status:503});return a.NextResponse.json({error:"Internal server error beim L\xf6schen des Users: "+(e?.message||"Unbekannter Fehler")},{status:500})}}async function m(e,{params:r}){try{if(!await c(e))return console.log("❌ Admin verification failed - sending 401"),a.NextResponse.json({error:"Nicht autorisiert",needsReauth:!0},{status:401});console.log("✅ Admin verified for user update");let{id:s}=r,{isVerified:n}=await e.json(),t=await u.prisma.user.update({where:{id:s},data:{isVerified:n}});return a.NextResponse.json({success:!0,user:t})}catch(e){return console.error("Error updating user:",e),a.NextResponse.json({error:"Internal server error beim Aktualisieren des Users"},{status:500})}}let g=new t.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/users/[id]/route",pathname:"/api/admin/users/[id]",filename:"route",bundlePath:"app/api/admin/users/[id]/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\users\\[id]\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:h,staticGenerationAsyncStorage:f,serverHooks:v}=g,x="/api/admin/users/[id]/route";function A(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:f})}},5456:(e,r,s)=>{s.d(r,{Gv:()=>a,RA:()=>u,WX:()=>l,c_:()=>i});var n=s(8691),t=s(1482),o=s.n(t);let i=async e=>n.ZP.hash(e,12),a=async(e,r)=>n.ZP.compare(e,r),u=e=>{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return o().sign({userId:e},r,{expiresIn:"7d"})},l=e=>{try{let r=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return o().verify(e,r)}catch{return null}}},3538:(e,r,s)=>{s.d(r,{prisma:()=>o});var n=s(3524);let t=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let o=t.prisma??new n.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});o.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),n=r.X(0,[8948,5972,8691,1482],()=>s(1255));module.exports=n})();