"use strict";(()=>{var e={};e.id=2672,e.ids=[2672,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},9942:(e,n,r)=>{r.r(n),r.d(n,{originalPathname:()=>v,patchFetch:()=>D,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>A,staticGenerationAsyncStorage:()=>g});var o={};r.r(o),r.d(o,{POST:()=>m,dynamic:()=>d});var s=r(9303),t=r(8716),a=r(670),i=r(7070),l=r(3538),c=r(5456);let d="force-dynamic";async function m(e){try{console.log("\uD83D\uDD0D Admin login attempt started");let{username:n,password:r}=await e.json();if(console.log("\uD83D\uDCDD Admin login data received:",{username:n}),!n||!r)return console.log("❌ Missing username or password"),i.NextResponse.json({error:"Benutzername und Passwort sind erforderlich"},{status:400});console.log("\uD83D\uDD0D Searching for admin:",n);let o=await l.prisma.admin.findUnique({where:{username:n}});if(console.log("\uD83D\uDC64 Admin found:",o?"YES":"NO"),!o){if(console.log("❌ Admin not found in database - checking environment fallback"),n===(process.env.ADMIN_USERNAME||"admin")&&r===(process.env.ADMIN_PASSWORD||"rootmr")){console.log("✅ Environment admin login successful");let e=(0,c.RA)("admin_env"),r=i.NextResponse.json({message:"Admin-Anmeldung erfolgreich (Environment)",admin:{id:"env_admin",username:n,role:"SUPER_ADMIN"}});return r.cookies.set("admin_token",e,{httpOnly:!0,secure:!0,sameSite:"lax",maxAge:604800}),r}return i.NextResponse.json({error:"Ung\xfcltige Admin-Anmeldedaten"},{status:401})}if(!await (0,c.Gv)(r,o.password)){if(console.log("❌ Database password invalid - checking environment fallback"),r===(process.env.ADMIN_PASSWORD||"rootmr")){console.log("✅ Environment password valid");let e=(0,c.RA)(`admin_${o.id}`),n=i.NextResponse.json({message:"Admin-Anmeldung erfolgreich (Environment Password)",admin:{id:o.id,username:o.username,role:o.role}});return n.cookies.set("admin_token",e,{httpOnly:!0,secure:!0,sameSite:"lax",maxAge:604800}),n}return i.NextResponse.json({error:"Ung\xfcltige Admin-Anmeldedaten"},{status:401})}let s=(0,c.RA)(`admin_${o.id}`),t=i.NextResponse.json({message:"Admin-Anmeldung erfolgreich",admin:{id:o.id,username:o.username,role:o.role}});return t.cookies.set("admin_token",s,{httpOnly:!0,secure:!0,sameSite:"lax",maxAge:604800}),t}catch(e){return console.error("❌ Admin login error details:",e),console.error("❌ Admin login error stack:",e instanceof Error?e.stack:"No stack trace"),console.error("❌ Admin login error message:",e instanceof Error?e.message:String(e)),i.NextResponse.json({error:"Interner Serverfehler: "+(e instanceof Error?e.message:String(e))},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/admin/login/route",pathname:"/api/admin/login",filename:"route",bundlePath:"app/api/admin/login/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\login\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:A}=u,v="/api/admin/login/route";function D(){return(0,a.patchFetch)({serverHooks:A,staticGenerationAsyncStorage:g})}},5456:(e,n,r)=>{r.d(n,{Gv:()=>i,RA:()=>l,WX:()=>c,c_:()=>a});var o=r(8691),s=r(1482),t=r.n(s);let a=async e=>o.ZP.hash(e,12),i=async(e,n)=>o.ZP.compare(e,n),l=e=>{let n=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return t().sign({userId:e},n,{expiresIn:"7d"})},c=e=>{try{let n=process.env.JWT_SECRET||"tournament-secret-key-2024-fallback";return t().verify(e,n)}catch{return null}}},3538:(e,n,r)=>{r.d(n,{prisma:()=>t});var o=r(3524);let s=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let t=s.prisma??new o.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});t.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var n=require("../../../../webpack-runtime.js");n.C(e);var r=e=>n(n.s=e),o=n.X(0,[8948,5972,8691,1482],()=>r(9942));module.exports=o})();