"use strict";(()=>{var e={};e.id=9750,e.ids=[9750,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},3604:(e,s,r)=>{r.r(s),r.d(s,{originalPathname:()=>A,patchFetch:()=>v,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>w});var a={};r.r(a),r.d(a,{GET:()=>c,POST:()=>u});var t=r(9303),o=r(8716),n=r(670),i=r(7070),d=r(3538),p=r(8691);async function u(e){try{let{newPassword:s,adminKey:r}=await e.json();if("emergency-update-key-2024"!==r&&r!==process.env.ADMIN_UPDATE_KEY)return i.NextResponse.json({error:"Unauthorized"},{status:401});if(!s)return i.NextResponse.json({error:"New password is required"},{status:400});console.log("\uD83D\uDD04 Updating admin password in production database...");let a=await p.ZP.hash(s,12),t=await d.prisma.admin.updateMany({data:{password:a}});return console.log(`✅ Updated ${t.count} admin passwords`),i.NextResponse.json({message:"Admin password updated successfully",updatedCount:t.count,newPassword:s})}catch(e){return console.error("❌ Error updating admin password:",e),i.NextResponse.json({error:"Failed to update admin password: "+(e instanceof Error?e.message:String(e))},{status:500})}}async function c(){return i.NextResponse.json({message:"Admin password update endpoint is available",usage:"POST with { newPassword, adminKey }"})}let l=new t.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/update-password/route",pathname:"/api/admin/update-password",filename:"route",bundlePath:"app/api/admin/update-password/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\admin\\update-password\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:w,serverHooks:g}=l,A="/api/admin/update-password/route";function v(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:w})}},3538:(e,s,r)=>{r.d(s,{prisma:()=>o});var a=r(3524);let t=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let o=t.prisma??new a.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});o.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),a=s.X(0,[8948,5972,8691],()=>r(3604));module.exports=a})();