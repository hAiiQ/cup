"use strict";(()=>{var e={};e.id=6061,e.ids=[6061,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},4022:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>y,requestAsyncStorage:()=>f,routeModule:()=>v,serverHooks:()=>A,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>m,dynamic:()=>d});var i=t(9303),a=t(8716),o=t(670),n=t(7070),u=t(3538),c=t(1482),p=t.n(c);let l=process.env.JWT_SECRET||"your-secret-key",d="force-dynamic";async function m(e){try{let r;let{token:t,socialAccounts:s}=await e.json();try{r=p().verify(t,l).userId}catch(e){return n.NextResponse.json({error:"Invalid token"},{status:401})}let i=await u.prisma.user.findUnique({where:{id:r}});if(!i)return n.NextResponse.json({error:"User not found"},{status:404});if(i.isVerified)return n.NextResponse.json({success:!0,message:"Account bereits verifiziert",alreadyVerified:!0});return await u.prisma.user.update({where:{id:r},data:{twitchName:s.twitch,instagramName:s.instagram,discordName:s.discord}}),n.NextResponse.json({success:!0,message:"Social Media Accounts gespeichert! Ein Administrator wird deine Angaben pr\xfcfen und dich manuell verifizieren.",pendingVerification:!0})}catch(e){return console.error("Social verification error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let v=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/verify-social/route",pathname:"/api/auth/verify-social",filename:"route",bundlePath:"app/api/auth/verify-social/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\auth\\verify-social\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:h,serverHooks:A}=v,x="/api/auth/verify-social/route";function y(){return(0,o.patchFetch)({serverHooks:A,staticGenerationAsyncStorage:h})}},3538:(e,r,t)=>{t.d(r,{prisma:()=>a});var s=t(3524);let i=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let a=i.prisma??new s.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});a.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[8948,5972,1482],()=>t(4022));module.exports=s})();