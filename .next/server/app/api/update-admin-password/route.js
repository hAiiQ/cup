"use strict";(()=>{var e={};e.id=9561,e.ids=[9561,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},3414:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>g,patchFetch:()=>w,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>A,staticGenerationAsyncStorage:()=>m});var a={};s.r(a),s.d(a,{GET:()=>u,dynamic:()=>p});var t=s(9303),o=s(8716),n=s(670),d=s(7070),i=s(3538);let p="force-dynamic";async function u(e){try{console.log("\uD83D\uDD27 Updating admin password to rootmr...");let e=s(7515),r=await e.hash("rootmr",12),a=await i.prisma.admin.updateMany({data:{password:r}});return console.log(`✅ Updated ${a.count} admin passwords to "rootmr"`),d.NextResponse.json({success:!0,message:`Admin password updated successfully! Updated ${a.count} admin(s)`,credentials:{username:"admin",password:"rootmr"},updatedCount:a.count})}catch(e){return console.error("❌ Admin password update error:",e),d.NextResponse.json({success:!1,error:"Failed to update admin password: "+(e instanceof Error?e.message:String(e))},{status:500})}}let c=new t.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/update-admin-password/route",pathname:"/api/update-admin-password",filename:"route",bundlePath:"app/api/update-admin-password/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\update-admin-password\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:A}=c,g="/api/update-admin-password/route";function w(){return(0,n.patchFetch)({serverHooks:A,staticGenerationAsyncStorage:m})}},3538:(e,r,s)=>{s.d(r,{prisma:()=>o});var a=s(3524);let t=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let o=t.prisma??new a.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});o.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),a=r.X(0,[8948,5972,7515],()=>s(3414));module.exports=a})();