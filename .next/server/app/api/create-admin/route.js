"use strict";(()=>{var e={};e.id=5568,e.ids=[5568,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},9821:(e,r,a)=>{a.r(r),a.d(r,{originalPathname:()=>w,patchFetch:()=>g,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>A,staticGenerationAsyncStorage:()=>l});var t={};a.r(t),a.d(t,{GET:()=>u,dynamic:()=>c});var o=a(9303),s=a(8716),n=a(670),i=a(7070),d=a(3538);let c="force-dynamic";async function u(e){try{console.log("\uD83D\uDD27 FORCE UPDATE: Always set admin password to rootmr");let e=a(7515),r=await e.hash("rootmr",12),t=await d.prisma.admin.updateMany({where:{username:"admin"},data:{password:r}});if(t.count>0)return console.log(`✅ FORCE UPDATED ${t.count} admin passwords to rootmr`),i.NextResponse.json({success:!0,message:"FORCE UPDATE: Admin password changed to rootmr",credentials:{username:"admin",password:"rootmr"},action:"updated_existing",updatedCount:t.count});let o=await d.prisma.admin.create({data:{username:"admin",password:r,role:"SUPER_ADMIN"}});return console.log("✅ Created new admin with rootmr password"),i.NextResponse.json({success:!0,message:"New admin created with rootmr password",credentials:{username:"admin",password:"rootmr"},action:"created_new",admin:{id:o.id,username:o.username,role:o.role}})}catch(e){return console.error("❌ Force update error:",e),i.NextResponse.json({success:!1,error:"Failed to force update: "+(e instanceof Error?e.message:String(e))},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/create-admin/route",pathname:"/api/create-admin",filename:"route",bundlePath:"app/api/create-admin/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\create-admin\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:l,serverHooks:A}=p,w="/api/create-admin/route";function g(){return(0,n.patchFetch)({serverHooks:A,staticGenerationAsyncStorage:l})}},3538:(e,r,a)=>{a.d(r,{prisma:()=>s});var t=a(3524);let o=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let s=o.prisma??new t.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});s.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../webpack-runtime.js");r.C(e);var a=e=>r(r.s=e),t=r.X(0,[8948,5972,7515],()=>a(9821));module.exports=t})();