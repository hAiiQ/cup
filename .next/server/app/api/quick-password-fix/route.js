"use strict";(()=>{var e={};e.id=1260,e.ids=[1260,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},4397:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>A,patchFetch:()=>x,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var a={};s.r(a),s.d(a,{GET:()=>c});var o=s(9303),t=s(8716),i=s(670),n=s(7070),u=s(3538);async function c(){try{console.log("\uD83D\uDD25 QUICK FIX: Change admin password NOW");let e=s(7515),r=await e.hash("rootmr",12);await u.prisma.$executeRaw`
      UPDATE "Admin" 
      SET password = ${r}
      WHERE username = 'admin'
    `,console.log("✅ Admin password updated via raw SQL");let a=await u.prisma.admin.findUnique({where:{username:"admin"}});return n.NextResponse.json({success:!0,message:"QUICK FIX: Admin password updated to rootmr via raw SQL",credentials:{username:"admin",password:"rootmr"},verification:a?"Admin found in database":"Admin not found"})}catch(e){return console.error("❌ Quick fix error:",e),n.NextResponse.json({success:!1,error:"Quick fix failed: "+(e instanceof Error?e.message:String(e))},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/quick-password-fix/route",pathname:"/api/quick-password-fix",filename:"route",bundlePath:"app/api/quick-password-fix/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\quick-password-fix\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:m}=d,A="/api/quick-password-fix/route";function x(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}},3538:(e,r,s)=>{s.d(r,{prisma:()=>t});var a=s(3524);let o=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let t=o.prisma??new a.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});t.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),a=r.X(0,[8948,5972,7515],()=>s(4397));module.exports=a})();