"use strict";(()=>{var e={};e.id=3386,e.ids=[3386,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},5266:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>g,patchFetch:()=>A,requestAsyncStorage:()=>u,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var o={};s.r(o),s.d(o,{GET:()=>p});var a=s(9303),t=s(8716),n=s(670),i=s(7070),d=s(3538);async function p(){try{console.log("\uD83D\uDD27 EMERGENCY: Updating admin password to rootmr");let e=s(7515),r=await e.hash("rootmr",12),o=await d.prisma.admin.updateMany({data:{password:r}});console.log(`✅ Updated ${o.count} admin passwords`);let a=await d.prisma.admin.count();return 0===a&&(console.log("\uD83D\uDD27 No admin found, creating one..."),await d.prisma.admin.create({data:{username:"admin",password:r,role:"SUPER_ADMIN"}}),console.log("✅ Admin user created")),i.NextResponse.json({success:!0,message:"EMERGENCY: Admin password updated to rootmr",details:{updatedAdmins:o.count,totalAdmins:0===a?1:a,newPassword:"rootmr"}})}catch(e){return console.error("❌ EMERGENCY password update failed:",e),i.NextResponse.json({success:!1,error:e instanceof Error?e.message:String(e)},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/emergency-password-fix/route",pathname:"/api/emergency-password-fix",filename:"route",bundlePath:"app/api/emergency-password-fix/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\emergency-password-fix\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:u,staticGenerationAsyncStorage:l,serverHooks:m}=c,g="/api/emergency-password-fix/route";function A(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}},3538:(e,r,s)=>{s.d(r,{prisma:()=>t});var o=s(3524);let a=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let t=a.prisma??new o.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});t.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),o=r.X(0,[8948,5972,7515],()=>s(5266));module.exports=o})();