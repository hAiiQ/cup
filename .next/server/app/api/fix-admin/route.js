"use strict";(()=>{var e={};e.id=3625,e.ids=[3625,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},623:(e,r,a)=>{a.r(r),a.d(r,{originalPathname:()=>D,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>m,serverHooks:()=>A,staticGenerationAsyncStorage:()=>p});var o={};a.r(o),a.d(o,{GET:()=>c,dynamic:()=>u});var t=a(9303),n=a(8716),s=a(670),i=a(7070),d=a(3538);let u="force-dynamic";async function c(e){try{if(console.log("\uD83D\uDD27 Fixing Admin table schema..."),await d.prisma.$executeRaw`ALTER TABLE "Admin" ADD COLUMN IF NOT EXISTS "role" TEXT DEFAULT 'ADMIN'`,console.log("✅ Added role column to Admin table"),await d.prisma.admin.findUnique({where:{username:"admin"}})){console.log("\uD83D\uDD27 Admin exists - FORCE UPDATING password to rootmr");let e=a(7515),r=await e.hash("rootmr",12);await d.prisma.$executeRaw`
        UPDATE "Admin" 
        SET password = ${r}, "updatedAt" = NOW()
        WHERE username = 'admin'
      `,console.log("✅ Admin password FORCE UPDATED to rootmr")}else{console.log("\uD83D\uDD27 Creating default admin account...");let e=a(7515),r=await e.hash("rootmr",12);await d.prisma.$executeRaw`
        INSERT INTO "Admin" (id, username, password, role, "createdAt", "updatedAt") 
        VALUES (gen_random_uuid()::text, 'admin', ${r}, 'SUPER_ADMIN', NOW(), NOW())
      `,console.log("✅ Default admin created")}return console.log("\uD83C\uDF89 Admin schema fix completed!"),i.NextResponse.json({success:!0,message:"Admin schema fixed and default admin created! \uD83C\uDF89",credentials:{username:"admin",password:"rootmr"}})}catch(e){return console.error("❌ Admin schema fix error:",e),i.NextResponse.json({success:!1,error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let m=new t.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/fix-admin/route",pathname:"/api/fix-admin",filename:"route",bundlePath:"app/api/fix-admin/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\fix-admin\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:p,serverHooks:A}=m,D="/api/fix-admin/route";function x(){return(0,s.patchFetch)({serverHooks:A,staticGenerationAsyncStorage:p})}},3538:(e,r,a)=>{a.d(r,{prisma:()=>n});var o=a(3524);let t=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let n=t.prisma??new o.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});n.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var r=require("../../../webpack-runtime.js");r.C(e);var a=e=>r(r.s=e),o=r.X(0,[8948,5972,7515],()=>a(623));module.exports=o})();