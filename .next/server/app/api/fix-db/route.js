"use strict";(()=>{var e={};e.id=86,e.ids=[86],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},188:(e,a,t)=>{t.r(a),t.d(a,{originalPathname:()=>m,patchFetch:()=>D,requestAsyncStorage:()=>T,routeModule:()=>d,serverHooks:()=>E,staticGenerationAsyncStorage:()=>A});var o={};t.r(o),t.d(o,{GET:()=>l,dynamic:()=>u});var r=t(9303),s=t(8716),i=t(670),n=t(7070),c=t(728);let u="force-dynamic";async function l(e){try{return console.log("\uD83D\uDD27 Starting database schema fix..."),await c._.$executeRaw`ALTER TABLE "User" ADD COLUMN IF NOT EXISTS "inGameNameVerified" BOOLEAN DEFAULT false`,console.log("✅ Added inGameNameVerified column"),await c._.$executeRaw`ALTER TABLE "User" ADD COLUMN IF NOT EXISTS "inGameRankVerified" BOOLEAN DEFAULT false`,console.log("✅ Added inGameRankVerified column"),await c._.$executeRaw`ALTER TABLE "Team" ADD COLUMN IF NOT EXISTS "imageUrl" TEXT`,console.log("✅ Added imageUrl column to Team"),await c._.$executeRaw`ALTER TABLE "Team" ADD COLUMN IF NOT EXISTS "position" INTEGER DEFAULT 0`,console.log("✅ Added position column to Team"),await c._.$executeRaw`ALTER TABLE "Match" ADD COLUMN IF NOT EXISTS "bracket" TEXT DEFAULT 'winner'`,console.log("✅ Added bracket column to Match"),await c._.$executeRaw`ALTER TABLE "Match" ADD COLUMN IF NOT EXISTS "matchNumber" INTEGER DEFAULT 1`,console.log("✅ Added matchNumber column to Match"),await c._.$executeRaw`ALTER TABLE "Match" ADD COLUMN IF NOT EXISTS "team1Score" INTEGER DEFAULT 0`,console.log("✅ Added team1Score column to Match"),await c._.$executeRaw`ALTER TABLE "Match" ADD COLUMN IF NOT EXISTS "team2Score" INTEGER DEFAULT 0`,console.log("✅ Added team2Score column to Match"),await c._.$executeRaw`ALTER TABLE "Match" ADD COLUMN IF NOT EXISTS "isLive" BOOLEAN DEFAULT false`,console.log("✅ Added isLive column to Match"),console.log("\uD83C\uDF89 Database schema fix completed successfully!"),n.NextResponse.json({success:!0,message:"Database schema fixed successfully! \uD83C\uDF89"})}catch(e){return console.error("❌ Database fix error:",e),n.NextResponse.json({success:!1,error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let d=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/fix-db/route",pathname:"/api/fix-db",filename:"route",bundlePath:"app/api/fix-db/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\fix-db\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:T,staticGenerationAsyncStorage:A,serverHooks:E}=d,m="/api/fix-db/route";function D(){return(0,i.patchFetch)({serverHooks:E,staticGenerationAsyncStorage:A})}},728:(e,a,t)=>{t.d(a,{_:()=>s});let o=require("@prisma/client"),r=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let s=r.prisma??new o.PrismaClient({})}};var a=require("../../../webpack-runtime.js");a.C(e);var t=e=>a(a.s=e),o=a.X(0,[8948,5972],()=>t(188));module.exports=o})();