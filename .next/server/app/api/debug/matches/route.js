"use strict";(()=>{var e={};e.id=306,e.ids=[306,3538],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1654:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>g,patchFetch:()=>b,requestAsyncStorage:()=>l,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>p});var r={};a.r(r),a.d(r,{GET:()=>d,dynamic:()=>u});var n=a(9303),o=a(8716),s=a(670),i=a(7070),c=a(3538);let u="force-dynamic";async function d(){try{console.log("\uD83D\uDD0D Debug: Fetching matches...");try{let e=await c.prisma.match.findMany({include:{team1:!0,team2:!0,winner:!0},orderBy:[{bracket:"asc"},{round:"asc"}]});return i.NextResponse.json({debug:!0,matchCount:e.length,withRelations:!0,matches:e.map(e=>({id:e.id,bracket:e.bracket,round:e.round,team1Name:e.team1?.name||"NULL",team2Name:e.team2?.name||"NULL",winnerName:e.winner?.name||"NULL",hasScore:e.team1Score>0||e.team2Score>0}))})}catch(t){console.log("⚠️ Debug: Relations failed, using basic query");let e=await c.prisma.match.findMany({orderBy:[{bracket:"asc"},{round:"asc"}]});return i.NextResponse.json({debug:!0,matchCount:e.length,withRelations:!1,note:"Relations not available - using basic match data",matches:e.map(e=>({id:e.id,bracket:e.bracket,round:e.round,team1Id:e.team1Id||"NULL",team2Id:e.team2Id||"NULL",winnerId:e.winnerId||"NULL",hasScore:e.team1Score>0||e.team2Score>0}))})}}catch(e){return console.error("Debug error:",e),i.NextResponse.json({error:"Debug error"},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/debug/matches/route",pathname:"/api/debug/matches",filename:"route",bundlePath:"app/api/debug/matches/route"},resolvedPagePath:"C:\\Users\\hAiQ\\Desktop\\cup\\src\\app\\api\\debug\\matches\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:p,serverHooks:h}=m,g="/api/debug/matches/route";function b(){return(0,s.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:p})}},3538:(e,t,a)=>{a.d(t,{prisma:()=>o});var r=a(3524);let n=globalThis;process.env.DATABASE_URL||(console.error("❌ DATABASE_URL environment variable is not set!"),console.log("\uD83D\uDD27 Please set DATABASE_URL in your Render environment variables"));let o=n.prisma??new r.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}});o.$connect().then(()=>{console.log("✅ Database connected successfully")}).catch(e=>{console.error("❌ Database connection failed:",e)})}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[8948,5972],()=>a(1654));module.exports=r})();