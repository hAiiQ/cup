"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/bracket/matches/route";
exports.ids = ["app/api/bracket/matches/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbracket%2Fmatches%2Froute&page=%2Fapi%2Fbracket%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbracket%2Fmatches%2Froute.ts&appDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbracket%2Fmatches%2Froute&page=%2Fapi%2Fbracket%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbracket%2Fmatches%2Froute.ts&appDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_hAiQ_Desktop_cup_src_app_api_bracket_matches_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/bracket/matches/route.ts */ \"(rsc)/./src/app/api/bracket/matches/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/bracket/matches/route\",\n        pathname: \"/api/bracket/matches\",\n        filename: \"route\",\n        bundlePath: \"app/api/bracket/matches/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\hAiQ\\\\Desktop\\\\cup\\\\src\\\\app\\\\api\\\\bracket\\\\matches\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_hAiQ_Desktop_cup_src_app_api_bracket_matches_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/bracket/matches/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZicmFja2V0JTJGbWF0Y2hlcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYnJhY2tldCUyRm1hdGNoZXMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZicmFja2V0JTJGbWF0Y2hlcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNoQWlRJTVDRGVza3RvcCU1Q2N1cCU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDaEFpUSU1Q0Rlc2t0b3AlNUNjdXAmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3dCO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3VwLz9kOWM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGhBaVFcXFxcRGVza3RvcFxcXFxjdXBcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYnJhY2tldFxcXFxtYXRjaGVzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9icmFja2V0L21hdGNoZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9icmFja2V0L21hdGNoZXNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2JyYWNrZXQvbWF0Y2hlcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGhBaVFcXFxcRGVza3RvcFxcXFxjdXBcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYnJhY2tldFxcXFxtYXRjaGVzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9icmFja2V0L21hdGNoZXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbracket%2Fmatches%2Froute&page=%2Fapi%2Fbracket%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbracket%2Fmatches%2Froute.ts&appDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/bracket/matches/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/bracket/matches/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_matchState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/matchState */ \"(rsc)/./src/lib/matchState.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\n\n\n// Force dynamic rendering\nconst dynamic = \"force-dynamic\";\nasync function GET() {\n    try {\n        console.log(\"\\uD83D\\uDD04 Fetching matches for bracket with persistent live states...\");\n        // Try to get persistent match states from database\n        let dbMatches = [];\n        let dbError = null;\n        try {\n            dbMatches = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.match.findMany({\n                select: {\n                    id: true,\n                    isLive: true,\n                    team1Score: true,\n                    team2Score: true,\n                    isFinished: true,\n                    winnerId: true,\n                    updatedAt: true\n                }\n            });\n            console.log(`✅ Database connected: ${dbMatches.length} persistent matches found`);\n        } catch (error) {\n            dbError = error;\n            console.log(\"⚠️ Database not available, falling back to in-memory states\");\n            console.log(\"Database error:\", error instanceof Error ? error.message : String(error));\n        }\n        // Get in-memory states (always available as fallback)\n        const memoryStates = (0,_lib_matchState__WEBPACK_IMPORTED_MODULE_1__.getAllMatchStates)();\n        console.log(`📊 In-memory states: ${memoryStates.size} matches`);\n        // Create combined match states map\n        const combinedStates = new Map();\n        // Add database states first (higher priority) if available\n        if (dbMatches.length > 0) {\n            for (const dbMatch of dbMatches){\n                combinedStates.set(dbMatch.id, {\n                    isLive: dbMatch.isLive,\n                    team1Score: dbMatch.team1Score || 0,\n                    team2Score: dbMatch.team2Score || 0,\n                    isFinished: dbMatch.isFinished || false,\n                    winnerId: dbMatch.winnerId,\n                    source: \"database\"\n                });\n            }\n        }\n        // Add in-memory states for matches not in database\n        Array.from(memoryStates.entries()).forEach(([matchId, memoryState])=>{\n            if (!combinedStates.has(matchId)) {\n                combinedStates.set(matchId, {\n                    ...memoryState,\n                    source: \"memory\"\n                });\n            }\n        });\n        console.log(`📊 Combined states: ${combinedStates.size} total matches (${dbMatches.length} from DB, ${memoryStates.size} from memory)`);\n        // Get teams for bracket display - DIRECT PRISMA CALL\n        let teams = [];\n        try {\n            console.log(\"\\uD83D\\uDD0D Fetching teams directly from database...\");\n            // Import prisma here to avoid circular dependency\n            const { prisma } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\"));\n            const teamsFromDB = await prisma.team.findMany({\n                orderBy: {\n                    position: \"asc\"\n                }\n            });\n            teams = teamsFromDB.map((team)=>({\n                    id: team.id,\n                    name: team.name,\n                    position: team.position\n                }));\n            console.log(`📋 Loaded ${teams.length} teams directly from database:`, teams.map((t)=>t.name));\n        } catch (error) {\n            console.log(\"\\uD83D\\uDCA1 Database fetch error, using fallback teams:\", error);\n        }\n        // Use sample teams if none available BUT KEEP REAL TEAM NAMES\n        if (teams.length === 0) {\n            teams = [\n                {\n                    id: \"alpha\",\n                    name: \"Team Alpha\",\n                    position: 1\n                },\n                {\n                    id: \"beta\",\n                    name: \"Team Beta\",\n                    position: 2\n                },\n                {\n                    id: \"gamma\",\n                    name: \"Team Gamma\",\n                    position: 3\n                },\n                {\n                    id: \"delta\",\n                    name: \"Team Delta\",\n                    position: 4\n                },\n                {\n                    id: \"echo\",\n                    name: \"Team Echo\",\n                    position: 5\n                },\n                {\n                    id: \"foxtrot\",\n                    name: \"Team Foxtrot\",\n                    position: 6\n                },\n                {\n                    id: \"golf\",\n                    name: \"Team Golf\",\n                    position: 7\n                },\n                {\n                    id: \"hotel\",\n                    name: \"Team Hotel\",\n                    position: 8\n                }\n            ];\n            console.log(\"\\uD83C\\uDFAF Using sample teams for consistent bracket display\");\n        }\n        // Ensure we have 8 teams for complete bracket\n        while(teams.length < 8){\n            teams.push({\n                id: `placeholder-${teams.length + 1}`,\n                name: `Team ${teams.length + 1}`,\n                position: teams.length + 1\n            });\n        }\n        // Generate complete bracket with real admin states\n        const matches = [];\n        const paddedTeams = teams.slice(0, 8);\n        // Helper function to get match state and determine teams based on progression\n        const getMatchData = (matchId, defaultTeam1, defaultTeam2)=>{\n            const state = combinedStates.get(matchId);\n            // Determine actual teams based on previous match results\n            let team1 = defaultTeam1;\n            let team2 = defaultTeam2;\n            // Team progression logic\n            if (matchId.startsWith(\"WB-S\")) {\n                // Winner Bracket Semifinals - get winners from quarters\n                const matchNum = parseInt(matchId.split(\"WB-S\")[1]);\n                if (matchNum === 1) {\n                    const winner1 = getWinnerFromMatch(\"WB-Q1\");\n                    const winner2 = getWinnerFromMatch(\"WB-Q2\");\n                    team1 = winner1 || {\n                        id: \"wb-q1-winner\",\n                        name: \"TBD\"\n                    };\n                    team2 = winner2 || {\n                        id: \"wb-q2-winner\",\n                        name: \"TBD\"\n                    };\n                } else if (matchNum === 2) {\n                    const winner1 = getWinnerFromMatch(\"WB-Q3\");\n                    const winner2 = getWinnerFromMatch(\"WB-Q4\");\n                    team1 = winner1 || {\n                        id: \"wb-q3-winner\",\n                        name: \"TBD\"\n                    };\n                    team2 = winner2 || {\n                        id: \"wb-q4-winner\",\n                        name: \"TBD\"\n                    };\n                }\n            } else if (matchId === \"WB-F\") {\n                // Winner Bracket Final - get winners from semis\n                const winner1 = getWinnerFromMatch(\"WB-S1\");\n                const winner2 = getWinnerFromMatch(\"WB-S2\");\n                team1 = winner1 || {\n                    id: \"wb-s1-winner\",\n                    name: \"TBD\"\n                };\n                team2 = winner2 || {\n                    id: \"wb-s2-winner\",\n                    name: \"TBD\"\n                };\n            } else if (matchId.startsWith(\"LB-1-\")) {\n                // Loser Bracket Round 1 - get losers from quarters\n                const matchNum = parseInt(matchId.split(\"LB-1-\")[1]);\n                if (matchNum === 1) {\n                    const loser1 = getLoserFromMatch(\"WB-Q1\");\n                    const loser2 = getLoserFromMatch(\"WB-Q2\");\n                    team1 = loser1 || {\n                        id: \"wb-q1-loser\",\n                        name: \"TBD\"\n                    };\n                    team2 = loser2 || {\n                        id: \"wb-q2-loser\",\n                        name: \"TBD\"\n                    };\n                } else if (matchNum === 2) {\n                    const loser1 = getLoserFromMatch(\"WB-Q3\");\n                    const loser2 = getLoserFromMatch(\"WB-Q4\");\n                    team1 = loser1 || {\n                        id: \"wb-q3-loser\",\n                        name: \"TBD\"\n                    };\n                    team2 = loser2 || {\n                        id: \"wb-q4-loser\",\n                        name: \"TBD\"\n                    };\n                }\n            } else if (matchId.startsWith(\"LB-2-\")) {\n                // Loser Bracket Round 2 - winners from LB-1 vs losers from WB Semis\n                const matchNum = parseInt(matchId.split(\"LB-2-\")[1]);\n                if (matchNum === 1) {\n                    const winner = getWinnerFromMatch(\"LB-1-1\");\n                    const loser = getLoserFromMatch(\"WB-S1\");\n                    team1 = winner || {\n                        id: \"lb-1-1-winner\",\n                        name: \"TBD\"\n                    };\n                    team2 = loser || {\n                        id: \"wb-s1-loser\",\n                        name: \"TBD\"\n                    };\n                } else if (matchNum === 2) {\n                    const winner = getWinnerFromMatch(\"LB-1-2\");\n                    const loser = getLoserFromMatch(\"WB-S2\");\n                    team1 = winner || {\n                        id: \"lb-1-2-winner\",\n                        name: \"TBD\"\n                    };\n                    team2 = loser || {\n                        id: \"wb-s2-loser\",\n                        name: \"TBD\"\n                    };\n                }\n            } else if (matchId === \"LB-3\") {\n                // Loser Bracket Round 3 (Semifinal) - winners from LB-2\n                const winner1 = getWinnerFromMatch(\"LB-2-1\");\n                const winner2 = getWinnerFromMatch(\"LB-2-2\");\n                team1 = winner1 || {\n                    id: \"lb-2-1-winner\",\n                    name: \"TBD\"\n                };\n                team2 = winner2 || {\n                    id: \"lb-2-2-winner\",\n                    name: \"TBD\"\n                };\n            } else if (matchId === \"LB-F\") {\n                // Loser Bracket Final - winner from LB-3 vs loser from WB Final\n                const winner = getWinnerFromMatch(\"LB-3\");\n                const loser = getLoserFromMatch(\"WB-F\");\n                team1 = winner || {\n                    id: \"lb-3-winner\",\n                    name: \"TBD\"\n                };\n                team2 = loser || {\n                    id: \"wb-f-loser\",\n                    name: \"TBD\"\n                };\n            } else if (matchId === \"GF\") {\n                // Grand Final - winner from WB Final vs winner from LB Final\n                const wbWinner = getWinnerFromMatch(\"WB-F\");\n                const lbWinner = getWinnerFromMatch(\"LB-F\");\n                team1 = wbWinner || {\n                    id: \"wb-f-winner\",\n                    name: \"TBD\"\n                };\n                team2 = lbWinner || {\n                    id: \"lb-f-winner\",\n                    name: \"TBD\"\n                };\n            }\n            return {\n                id: matchId,\n                team1: team1,\n                team2: team2,\n                team1Score: state?.team1Score || 0,\n                team2Score: state?.team2Score || 0,\n                isLive: state?.isLive || false,\n                isFinished: state?.isFinished || false,\n                winnerId: state?.winnerId || null\n            };\n        };\n        // Helper function to get winner from a finished match\n        const getWinnerFromMatch = (matchId)=>{\n            const state = combinedStates.get(matchId);\n            if (!state || !state.isFinished || !state.winnerId) return null;\n            // For quarter finals, get actual team data\n            if (matchId.startsWith(\"WB-Q\")) {\n                const matchNum = parseInt(matchId.split(\"WB-Q\")[1]);\n                const team1 = paddedTeams[(matchNum - 1) * 2] || {\n                    id: `team-${(matchNum - 1) * 2 + 1}`,\n                    name: `Team ${(matchNum - 1) * 2 + 1}`\n                };\n                const team2 = paddedTeams[(matchNum - 1) * 2 + 1] || {\n                    id: `team-${(matchNum - 1) * 2 + 2}`,\n                    name: `Team ${(matchNum - 1) * 2 + 2}`\n                };\n                if (state.winnerId === \"team1\") return team1;\n                if (state.winnerId === \"team2\") return team2;\n            }\n            // For other matches, return placeholder winner\n            return {\n                id: `${matchId}-winner`,\n                name: `${matchId} Winner`\n            };\n        };\n        // Helper function to get loser from a finished match\n        const getLoserFromMatch = (matchId)=>{\n            const state = combinedStates.get(matchId);\n            if (!state || !state.isFinished || !state.winnerId) return null;\n            // For quarter finals, get actual team data\n            if (matchId.startsWith(\"WB-Q\")) {\n                const matchNum = parseInt(matchId.split(\"WB-Q\")[1]);\n                const team1 = paddedTeams[(matchNum - 1) * 2] || {\n                    id: `team-${(matchNum - 1) * 2 + 1}`,\n                    name: `Team ${(matchNum - 1) * 2 + 1}`\n                };\n                const team2 = paddedTeams[(matchNum - 1) * 2 + 1] || {\n                    id: `team-${(matchNum - 1) * 2 + 2}`,\n                    name: `Team ${(matchNum - 1) * 2 + 2}`\n                };\n                if (state.winnerId === \"team1\") return team2 // Loser is the opposite\n                ;\n                if (state.winnerId === \"team2\") return team1;\n            }\n            // For other matches, return placeholder loser\n            return {\n                id: `${matchId}-loser`,\n                name: `${matchId} Loser`\n            };\n        };\n        // WINNER BRACKET - Quarterfinals (REAL TEAMS)\n        for(let i = 0; i < 4; i++){\n            const team1 = paddedTeams[i * 2] || {\n                id: `team-${i * 2 + 1}`,\n                name: `Team ${i * 2 + 1}`\n            };\n            const team2 = paddedTeams[i * 2 + 1] || {\n                id: `team-${i * 2 + 2}`,\n                name: `Team ${i * 2 + 2}`\n            };\n            console.log(`🏆 Quarter ${i + 1}: ${team1.name} vs ${team2.name}`);\n            // Use simple match data for quarters since teams are fixed\n            const state = combinedStates.get(`WB-Q${i + 1}`);\n            const matchData = {\n                id: `WB-Q${i + 1}`,\n                team1: team1,\n                team2: team2,\n                team1Score: state?.team1Score || 0,\n                team2Score: state?.team2Score || 0,\n                isLive: state?.isLive || false,\n                isFinished: state?.isFinished || false,\n                winnerId: state?.winnerId || null\n            };\n            matches.push({\n                ...matchData,\n                round: \"Quarterfinals\",\n                bracket: \"winner\"\n            });\n        }\n        // WINNER BRACKET - Semifinals (TBD until quarters finish)\n        for(let i = 0; i < 2; i++){\n            const matchData = getMatchData(`WB-S${i + 1}`, {\n                id: \"tbd\",\n                name: \"TBD\"\n            }, {\n                id: \"tbd\",\n                name: \"TBD\"\n            });\n            matches.push({\n                ...matchData,\n                round: \"Semifinals\",\n                bracket: \"winner\"\n            });\n        }\n        // WINNER BRACKET - Final (TBD until semis finish)\n        const wbFinalData = getMatchData(\"WB-F\", {\n            id: \"tbd\",\n            name: \"TBD\"\n        }, {\n            id: \"tbd\",\n            name: \"TBD\"\n        });\n        matches.push({\n            ...wbFinalData,\n            round: \"Winner Final\",\n            bracket: \"winner\"\n        });\n        // LOSER BRACKET - First Round (TBD until quarters finish)\n        for(let i = 0; i < 2; i++){\n            const matchData = getMatchData(`LB-1-${i + 1}`, {\n                id: \"tbd\",\n                name: \"TBD\"\n            }, {\n                id: \"tbd\",\n                name: \"TBD\"\n            });\n            matches.push({\n                ...matchData,\n                round: \"Loser Round 1\",\n                bracket: \"loser\"\n            });\n        }\n        // LOSER BRACKET - Second Round (TBD until LB-1 and WB semis finish)\n        for(let i = 0; i < 2; i++){\n            const matchData = getMatchData(`LB-2-${i + 1}`, {\n                id: \"tbd\",\n                name: \"TBD\"\n            }, {\n                id: \"tbd\",\n                name: \"TBD\"\n            });\n            matches.push({\n                ...matchData,\n                round: \"Loser Round 2\",\n                bracket: \"loser\"\n            });\n        }\n        // LOSER BRACKET - Semifinal (RUNDE 6 - LB Round 3) (TBD until LB-2 finishes)\n        const lbSemiData = getMatchData(\"LB-3\", {\n            id: \"tbd\",\n            name: \"TBD\"\n        }, {\n            id: \"tbd\",\n            name: \"TBD\"\n        });\n        matches.push({\n            ...lbSemiData,\n            round: \"Loser Semifinal\",\n            bracket: \"loser\"\n        });\n        // LOSER BRACKET - Final (TBD until LB-3 and WB Final finish)\n        const lbFinalData = getMatchData(\"LB-F\", {\n            id: \"tbd\",\n            name: \"TBD\"\n        }, {\n            id: \"tbd\",\n            name: \"TBD\"\n        });\n        matches.push({\n            ...lbFinalData,\n            round: \"Loser Final\",\n            bracket: \"loser\"\n        });\n        // GRAND FINAL (TBD until both finals finish)\n        const grandFinalData = getMatchData(\"GF\", {\n            id: \"tbd\",\n            name: \"TBD\"\n        }, {\n            id: \"tbd\",\n            name: \"TBD\"\n        });\n        matches.push({\n            ...grandFinalData,\n            round: \"Grand Final\",\n            bracket: \"final\"\n        });\n        console.log(`✅ Generated ${matches.length} matches with persistent control states`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            matches,\n            teams: paddedTeams,\n            lastUpdated: new Date().toISOString(),\n            adminControlled: combinedStates.size > 0,\n            persistentMatches: dbMatches.length,\n            memoryMatches: memoryStates.size\n        });\n    } catch (error) {\n        console.error(\"❌ Bracket matches error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch bracket matches\",\n            matches: [],\n            teams: []\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/bracket/matches/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/matchState.ts":
/*!*******************************!*\
  !*** ./src/lib/matchState.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllMatchStates: () => (/* binding */ getAllMatchStates),\n/* harmony export */   getMatchState: () => (/* binding */ getMatchState),\n/* harmony export */   setMatchLive: () => (/* binding */ setMatchLive),\n/* harmony export */   setMatchScore: () => (/* binding */ setMatchScore),\n/* harmony export */   setMatchState: () => (/* binding */ setMatchState)\n/* harmony export */ });\n// Simple in-memory state for live match status and scores\n// This will persist during server runtime\n// In-memory storage for match states\nconst matchStates = new Map();\nfunction getMatchState(matchId) {\n    return matchStates.get(matchId) || {\n        isLive: false,\n        team1Score: 0,\n        team2Score: 0,\n        isFinished: false,\n        lastUpdated: Date.now()\n    };\n}\nfunction setMatchState(matchId, state) {\n    const currentState = getMatchState(matchId);\n    const newState = {\n        ...currentState,\n        ...state,\n        lastUpdated: Date.now()\n    };\n    matchStates.set(matchId, newState);\n    console.log(`📝 Match ${matchId} state updated:`, newState);\n    return newState;\n}\nfunction getAllMatchStates() {\n    return matchStates;\n}\nfunction setMatchLive(matchId, isLive) {\n    return setMatchState(matchId, {\n        isLive\n    });\n}\nfunction setMatchScore(matchId, team1Score, team2Score) {\n    // Determine if match is finished based on score rules\n    // Grand Final: First to 3 points wins\n    // All other matches: First to 2 points wins\n    const isGrandFinal = matchId === \"GF\";\n    const winningScore = isGrandFinal ? 3 : 2;\n    const isFinished = team1Score >= winningScore || team2Score >= winningScore;\n    const winnerId = isFinished ? team1Score >= winningScore ? \"team1\" : \"team2\" : undefined;\n    console.log(`🏆 Match ${matchId}: ${team1Score}-${team2Score}, Winning score: ${winningScore}, Finished: ${isFinished}, Winner: ${winnerId}`);\n    return setMatchState(matchId, {\n        team1Score,\n        team2Score,\n        isFinished,\n        winnerId,\n        isLive: !isFinished // Stop live when finished\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21hdGNoU3RhdGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsMENBQTBDO0FBVzFDLHFDQUFxQztBQUNyQyxNQUFNQSxjQUF1QyxJQUFJQztBQUUxQyxTQUFTQyxjQUFjQyxPQUFlO0lBQzNDLE9BQU9ILFlBQVlJLEdBQUcsQ0FBQ0QsWUFBWTtRQUNqQ0UsUUFBUTtRQUNSQyxZQUFZO1FBQ1pDLFlBQVk7UUFDWkMsWUFBWTtRQUNaQyxhQUFhQyxLQUFLQyxHQUFHO0lBQ3ZCO0FBQ0Y7QUFFTyxTQUFTQyxjQUFjVCxPQUFlLEVBQUVVLEtBQTBCO0lBQ3ZFLE1BQU1DLGVBQWVaLGNBQWNDO0lBQ25DLE1BQU1ZLFdBQVc7UUFDZixHQUFHRCxZQUFZO1FBQ2YsR0FBR0QsS0FBSztRQUNSSixhQUFhQyxLQUFLQyxHQUFHO0lBQ3ZCO0lBQ0FYLFlBQVlnQixHQUFHLENBQUNiLFNBQVNZO0lBQ3pCRSxRQUFRQyxHQUFHLENBQUMsQ0FBQyxTQUFTLEVBQUVmLFFBQVEsZUFBZSxDQUFDLEVBQUVZO0lBQ2xELE9BQU9BO0FBQ1Q7QUFFTyxTQUFTSTtJQUNkLE9BQU9uQjtBQUNUO0FBRU8sU0FBU29CLGFBQWFqQixPQUFlLEVBQUVFLE1BQWU7SUFDM0QsT0FBT08sY0FBY1QsU0FBUztRQUFFRTtJQUFPO0FBQ3pDO0FBRU8sU0FBU2dCLGNBQWNsQixPQUFlLEVBQUVHLFVBQWtCLEVBQUVDLFVBQWtCO0lBQ25GLHNEQUFzRDtJQUN0RCxzQ0FBc0M7SUFDdEMsNENBQTRDO0lBQzVDLE1BQU1lLGVBQWVuQixZQUFZO0lBQ2pDLE1BQU1vQixlQUFlRCxlQUFlLElBQUk7SUFFeEMsTUFBTWQsYUFBYUYsY0FBY2lCLGdCQUFnQmhCLGNBQWNnQjtJQUMvRCxNQUFNQyxXQUFXaEIsYUFDZEYsY0FBY2lCLGVBQWUsVUFBVSxVQUN4Q0U7SUFFRlIsUUFBUUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFZixRQUFRLEVBQUUsRUFBRUcsV0FBVyxDQUFDLEVBQUVDLFdBQVcsaUJBQWlCLEVBQUVnQixhQUFhLFlBQVksRUFBRWYsV0FBVyxVQUFVLEVBQUVnQixTQUFTLENBQUM7SUFFNUksT0FBT1osY0FBY1QsU0FBUztRQUM1Qkc7UUFDQUM7UUFDQUM7UUFDQWdCO1FBQ0FuQixRQUFRLENBQUNHLFdBQVcsMEJBQTBCO0lBQ2hEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jdXAvLi9zcmMvbGliL21hdGNoU3RhdGUudHM/ZTUwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTaW1wbGUgaW4tbWVtb3J5IHN0YXRlIGZvciBsaXZlIG1hdGNoIHN0YXR1cyBhbmQgc2NvcmVzXHJcbi8vIFRoaXMgd2lsbCBwZXJzaXN0IGR1cmluZyBzZXJ2ZXIgcnVudGltZVxyXG5cclxuaW50ZXJmYWNlIE1hdGNoU3RhdGUge1xyXG4gIGlzTGl2ZTogYm9vbGVhblxyXG4gIHRlYW0xU2NvcmU6IG51bWJlclxyXG4gIHRlYW0yU2NvcmU6IG51bWJlclxyXG4gIGlzRmluaXNoZWQ6IGJvb2xlYW5cclxuICB3aW5uZXJJZD86IHN0cmluZ1xyXG4gIGxhc3RVcGRhdGVkOiBudW1iZXJcclxufVxyXG5cclxuLy8gSW4tbWVtb3J5IHN0b3JhZ2UgZm9yIG1hdGNoIHN0YXRlc1xyXG5jb25zdCBtYXRjaFN0YXRlczogTWFwPHN0cmluZywgTWF0Y2hTdGF0ZT4gPSBuZXcgTWFwKClcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXRjaFN0YXRlKG1hdGNoSWQ6IHN0cmluZyk6IE1hdGNoU3RhdGUge1xyXG4gIHJldHVybiBtYXRjaFN0YXRlcy5nZXQobWF0Y2hJZCkgfHwge1xyXG4gICAgaXNMaXZlOiBmYWxzZSxcclxuICAgIHRlYW0xU2NvcmU6IDAsXHJcbiAgICB0ZWFtMlNjb3JlOiAwLFxyXG4gICAgaXNGaW5pc2hlZDogZmFsc2UsXHJcbiAgICBsYXN0VXBkYXRlZDogRGF0ZS5ub3coKVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldE1hdGNoU3RhdGUobWF0Y2hJZDogc3RyaW5nLCBzdGF0ZTogUGFydGlhbDxNYXRjaFN0YXRlPikge1xyXG4gIGNvbnN0IGN1cnJlbnRTdGF0ZSA9IGdldE1hdGNoU3RhdGUobWF0Y2hJZClcclxuICBjb25zdCBuZXdTdGF0ZSA9IHtcclxuICAgIC4uLmN1cnJlbnRTdGF0ZSxcclxuICAgIC4uLnN0YXRlLFxyXG4gICAgbGFzdFVwZGF0ZWQ6IERhdGUubm93KClcclxuICB9XHJcbiAgbWF0Y2hTdGF0ZXMuc2V0KG1hdGNoSWQsIG5ld1N0YXRlKVxyXG4gIGNvbnNvbGUubG9nKGDwn5OdIE1hdGNoICR7bWF0Y2hJZH0gc3RhdGUgdXBkYXRlZDpgLCBuZXdTdGF0ZSlcclxuICByZXR1cm4gbmV3U3RhdGVcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbE1hdGNoU3RhdGVzKCk6IE1hcDxzdHJpbmcsIE1hdGNoU3RhdGU+IHtcclxuICByZXR1cm4gbWF0Y2hTdGF0ZXNcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldE1hdGNoTGl2ZShtYXRjaElkOiBzdHJpbmcsIGlzTGl2ZTogYm9vbGVhbikge1xyXG4gIHJldHVybiBzZXRNYXRjaFN0YXRlKG1hdGNoSWQsIHsgaXNMaXZlIH0pXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRNYXRjaFNjb3JlKG1hdGNoSWQ6IHN0cmluZywgdGVhbTFTY29yZTogbnVtYmVyLCB0ZWFtMlNjb3JlOiBudW1iZXIpIHtcclxuICAvLyBEZXRlcm1pbmUgaWYgbWF0Y2ggaXMgZmluaXNoZWQgYmFzZWQgb24gc2NvcmUgcnVsZXNcclxuICAvLyBHcmFuZCBGaW5hbDogRmlyc3QgdG8gMyBwb2ludHMgd2luc1xyXG4gIC8vIEFsbCBvdGhlciBtYXRjaGVzOiBGaXJzdCB0byAyIHBvaW50cyB3aW5zXHJcbiAgY29uc3QgaXNHcmFuZEZpbmFsID0gbWF0Y2hJZCA9PT0gJ0dGJ1xyXG4gIGNvbnN0IHdpbm5pbmdTY29yZSA9IGlzR3JhbmRGaW5hbCA/IDMgOiAyXHJcbiAgXHJcbiAgY29uc3QgaXNGaW5pc2hlZCA9IHRlYW0xU2NvcmUgPj0gd2lubmluZ1Njb3JlIHx8IHRlYW0yU2NvcmUgPj0gd2lubmluZ1Njb3JlXHJcbiAgY29uc3Qgd2lubmVySWQgPSBpc0ZpbmlzaGVkID8gXHJcbiAgICAodGVhbTFTY29yZSA+PSB3aW5uaW5nU2NvcmUgPyAndGVhbTEnIDogJ3RlYW0yJykgOiBcclxuICAgIHVuZGVmaW5lZFxyXG4gIFxyXG4gIGNvbnNvbGUubG9nKGDwn4+GIE1hdGNoICR7bWF0Y2hJZH06ICR7dGVhbTFTY29yZX0tJHt0ZWFtMlNjb3JlfSwgV2lubmluZyBzY29yZTogJHt3aW5uaW5nU2NvcmV9LCBGaW5pc2hlZDogJHtpc0ZpbmlzaGVkfSwgV2lubmVyOiAke3dpbm5lcklkfWApXHJcbiAgXHJcbiAgcmV0dXJuIHNldE1hdGNoU3RhdGUobWF0Y2hJZCwgeyBcclxuICAgIHRlYW0xU2NvcmUsIFxyXG4gICAgdGVhbTJTY29yZSwgXHJcbiAgICBpc0ZpbmlzaGVkLFxyXG4gICAgd2lubmVySWQsXHJcbiAgICBpc0xpdmU6ICFpc0ZpbmlzaGVkIC8vIFN0b3AgbGl2ZSB3aGVuIGZpbmlzaGVkXHJcbiAgfSlcclxufVxyXG4iXSwibmFtZXMiOlsibWF0Y2hTdGF0ZXMiLCJNYXAiLCJnZXRNYXRjaFN0YXRlIiwibWF0Y2hJZCIsImdldCIsImlzTGl2ZSIsInRlYW0xU2NvcmUiLCJ0ZWFtMlNjb3JlIiwiaXNGaW5pc2hlZCIsImxhc3RVcGRhdGVkIiwiRGF0ZSIsIm5vdyIsInNldE1hdGNoU3RhdGUiLCJzdGF0ZSIsImN1cnJlbnRTdGF0ZSIsIm5ld1N0YXRlIiwic2V0IiwiY29uc29sZSIsImxvZyIsImdldEFsbE1hdGNoU3RhdGVzIiwic2V0TWF0Y2hMaXZlIiwic2V0TWF0Y2hTY29yZSIsImlzR3JhbmRGaW5hbCIsIndpbm5pbmdTY29yZSIsIndpbm5lcklkIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/matchState.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\n// Check if DATABASE_URL is available\nif (!process.env.DATABASE_URL) {\n    console.error(\"❌ DATABASE_URL environment variable is not set!\");\n    console.log(\"\\uD83D\\uDD27 Please set DATABASE_URL in your Render environment variables\");\n}\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  false ? 0 : [\n        \"query\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ],\n    datasources: {\n        db: {\n            url: process.env.DATABASE_URL\n        }\n    }\n});\nif (true) globalForPrisma.prisma = prisma;\n// Test database connection on startup\nprisma.$connect().then(()=>{\n    console.log(\"✅ Database connected successfully\");\n}).catch((error)=>{\n    console.error(\"❌ Database connection failed:\", error);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsTUFBTUMsa0JBQWtCQztBQUl4QixxQ0FBcUM7QUFDckMsSUFBSSxDQUFDQyxRQUFRQyxHQUFHLENBQUNDLFlBQVksRUFBRTtJQUM3QkMsUUFBUUMsS0FBSyxDQUFDO0lBQ2RELFFBQVFFLEdBQUcsQ0FBQztBQUNkO0FBRU8sTUFBTUMsU0FDWFIsZ0JBQWdCUSxNQUFNLElBQ3RCLElBQUlULHdEQUFZQSxDQUFDO0lBQ2ZRLEtBQUtMLE1BQXlCLEdBQWUsQ0FBUyxHQUFHO1FBQUM7UUFBUztRQUFRO1FBQVE7S0FBUTtJQUMzRk8sYUFBYTtRQUNYQyxJQUFJO1lBQ0ZDLEtBQUtULFFBQVFDLEdBQUcsQ0FBQ0MsWUFBWTtRQUMvQjtJQUNGO0FBQ0YsR0FBRTtBQUVKLElBQUlGLElBQXlCLEVBQWNGLGdCQUFnQlEsTUFBTSxHQUFHQTtBQUVwRSxzQ0FBc0M7QUFDdENBLE9BQU9JLFFBQVEsR0FDWkMsSUFBSSxDQUFDO0lBQ0pSLFFBQVFFLEdBQUcsQ0FBQztBQUNkLEdBQ0NPLEtBQUssQ0FBQyxDQUFDUjtJQUNORCxRQUFRQyxLQUFLLENBQUMsaUNBQWlDQTtBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL2N1cC8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXHJcblxyXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xyXG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXHJcbn1cclxuXHJcbi8vIENoZWNrIGlmIERBVEFCQVNFX1VSTCBpcyBhdmFpbGFibGVcclxuaWYgKCFwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwpIHtcclxuICBjb25zb2xlLmVycm9yKCfinYwgREFUQUJBU0VfVVJMIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIG5vdCBzZXQhJylcclxuICBjb25zb2xlLmxvZygn8J+UpyBQbGVhc2Ugc2V0IERBVEFCQVNFX1VSTCBpbiB5b3VyIFJlbmRlciBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcHJpc21hID1cclxuICBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/XHJcbiAgbmV3IFByaXNtYUNsaWVudCh7XHJcbiAgICBsb2c6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBbJ2Vycm9yJ10gOiBbJ3F1ZXJ5JywgJ2luZm8nLCAnd2FybicsICdlcnJvciddLFxyXG4gICAgZGF0YXNvdXJjZXM6IHtcclxuICAgICAgZGI6IHtcclxuICAgICAgICB1cmw6IHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSlcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hXHJcblxyXG4vLyBUZXN0IGRhdGFiYXNlIGNvbm5lY3Rpb24gb24gc3RhcnR1cFxyXG5wcmlzbWEuJGNvbm5lY3QoKVxyXG4gIC50aGVuKCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCfinIUgRGF0YWJhc2UgY29ubmVjdGVkIHN1Y2Nlc3NmdWxseScpXHJcbiAgfSlcclxuICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6JywgZXJyb3IpXHJcbiAgfSlcclxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbFRoaXMiLCJwcm9jZXNzIiwiZW52IiwiREFUQUJBU0VfVVJMIiwiY29uc29sZSIsImVycm9yIiwibG9nIiwicHJpc21hIiwiZGF0YXNvdXJjZXMiLCJkYiIsInVybCIsIiRjb25uZWN0IiwidGhlbiIsImNhdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbracket%2Fmatches%2Froute&page=%2Fapi%2Fbracket%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbracket%2Fmatches%2Froute.ts&appDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5ChAiQ%5CDesktop%5Ccup&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();